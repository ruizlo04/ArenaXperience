services:
  # Base de datos PostgreSQL
  pg:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    container_name: postgresql-spring
    restart: on-failure
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # Interfaz web para PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-spring
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 1
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  # Backend Spring Boot
  app:
    build:
      context: ./ApiArenaXperience
      dockerfile: Dockerfile
    container_name: arenaXperience
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://pg:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=12345678
    ports:
      - "8080:8080"
    depends_on:
      pg:
        condition: service_healthy
    restart: on-failure

  # Frontend Angular SSR
  frontend:
    build:
      context: ./ArenaXperienceFront/arenaXperienceFront
      dockerfile: Dockerfile
    container_name: arenaXperience-front
    ports:
      - "4000:4000"
    depends_on:
      - app
    restart: on-failure

volumes:
  pgdata:
  pgadmin-data: